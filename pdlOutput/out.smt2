(set-option :produce-unsat-cores true)
    (define-sort ABS.StdLib.Int () Int)
    (define-sort ABS.StdLib.Float () Real)
    (define-sort ABS.StdLib.Bool () Bool)
    (define-sort ABS.StdLib.String () String)
	(define-fun min ((x Real) (y Real)) Real
  (ite (< x y) x y))
(define-fun max ((x Real) (y Real)) Real
  (ite (< x y) y x))
	(declare-fun p5 () Real)
	(declare-fun p3 () Real)
	(declare-fun p4 () Real)
	(declare-fun p32 () Real)
	(declare-fun p33 () Real)
	(declare-fun p89 () Real)
	(declare-fun p90 () Real)
	(declare-fun p1 () Real)
	(declare-fun p2 () Real)
	(assert (! (<= 0 p5 ) :named A1))
	(assert (! (<= p5 1 ) :named A2))
	(assert (! (<= 0 p3 ) :named A3))
	(assert (! (<= p3 1 ) :named A4))
	(assert (! (<= 0 p4 ) :named A5))
	(assert (! (<= p4 1 ) :named A6))
	(assert (! (<= 0 p32 ) :named A7))
	(assert (! (<= p32 1 ) :named A8))
	(assert (! (<= 0 p33 ) :named A9))
	(assert (! (<= p33 1 ) :named A10))
	(assert (! (<= 0 p89 ) :named A11))
	(assert (! (<= p89 1 ) :named A12))
	(assert (! (<= 0 p90 ) :named A13))
	(assert (! (<= p90 1 ) :named A14))
	(assert (! (<= 0 p1 ) :named A15))
	(assert (! (<= p1 1 ) :named A16))
	(assert (! (<= 0 p2 ) :named A17))
	(assert (! (<= p2 1 ) :named A18))
	(declare-const vp34 ABS.StdLib.Int)
	(declare-const vp61 ABS.StdLib.Int)
	(declare-const vp88 ABS.StdLib.Int)
	(declare-const vp91 ABS.StdLib.Int)
	(declare-const vp118 ABS.StdLib.Int)
	(declare-const vp145 ABS.StdLib.Int)
	(declare-const vp172 ABS.StdLib.Int)
	(declare-const vp199 ABS.StdLib.Int)
	(assert (! (<= p5 (+ (* p5 p3) (* (- 1 p5) p4))) :named A19))
	(assert (! (<= p5 1) :named A20))=
	(assert (! (<= p3 (+ (* (/  1 2) p32) (* (- 1 (/  1 2)) p33))) :named A21))
	(assert (! (and true (<  vp34 20)) :named A22))
	(assert (! (<= p32 1) :named A23))
(assert (! (and true (<  vp61 20)) :named A24))
	(assert (! (<= p33 1) :named A25))
(assert (! (and true (<  vp88 20)) :named A26))
	(assert (! (<= p4 (+ (* (/  1 2) p89) (* (- 1 (/  1 2)) p90))) :named A27))
	(assert (! (and (not true) (<  vp91 20)) :named A28))
	(assert (! (<= p89 1)  :named A29))
(assert (! (and (not true) (<  vp118 20)) :named A30))
	(assert (! (<= p90 1) :named A31))
(assert (! (and (not true) (<  vp145 20)) :named A32))
	(assert (! (<= (/  1 2) (+ (* p5 p1) (* (- 1 p5) p2))) :named A33))
	(assert (! (= p1 0) :named A34))
(assert (! (and true (not (<  vp172 20)))  :named A35))
	(assert (! (<= p2 1)  :named A36))
(assert (! (and (not true) (not (<  vp199 20))) :named A37))
(check-sat)
(get-unsat-core)