(define-fun min ((x Real) (y Real)) Real
  (ite (< x y) x y))
(define-fun max ((x Real) (y Real)) Real
  (ite (< x y) y x))
	(declare-fun p710 () Real)
	(declare-fun p711 () Real)
	(declare-fun org.abs_models.crowbar.data.True@543c36f4 () Real)
	(declare-fun p712 () Real)
	(declare-fun p713 () Real)
	(declare-fun p766 () Real)
	(declare-fun p767 () Real)
	(declare-fun And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)) () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@cb0aa631)) () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@76fa27e0)) () Real)
	(declare-fun p924 () Real)
	(declare-fun p925 () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@dc48de3b))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@c0b83e5b)) () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@838b40d6))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@7a8dca1e)) () Real)
	(declare-fun p1186 () Real)
	(declare-fun p1187 () Real)
	(declare-fun p1188 () Real)
	(declare-fun p1189 () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@e2c435fb))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@569094d8)) () Real)
	(declare-fun p1320 () Real)
	(declare-fun p1321 () Real)
	(declare-fun p1374 () Real)
	(declare-fun p1375 () Real)
	(declare-fun And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)) () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@b30fcc7c)) () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@24205b46)) () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@c30420e0))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@c45218fb)) () Real)
	(declare-fun p1662 () Real)
	(declare-fun p1663 () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@99cc245d))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@41ea4083)) () Real)
	(declare-fun p1794 () Real)
	(declare-fun p1795 () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@da8067e9))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@31167084)) () Real)
	(declare-fun p1978 () Real)
	(declare-fun p1979 () Real)
	(declare-fun And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)) () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@788ca52e)) () Real)
	(declare-fun And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@e7801531)) () Real)
	(assert (<= 0 p710 ))
	(assert (<= p710 1 ))
	(assert (<= 0 p711 ))
	(assert (<= p711 1 ))
	(assert (<= 0 org.abs_models.crowbar.data.True@543c36f4 ))
	(assert (<= org.abs_models.crowbar.data.True@543c36f4 1 ))
	(assert (<= 0 p712 ))
	(assert (<= p712 1 ))
	(assert (<= 0 p713 ))
	(assert (<= p713 1 ))
	(assert (<= 0 p766 ))
	(assert (<= p766 1 ))
	(assert (<= 0 p767 ))
	(assert (<= p767 1 ))
	(assert (<= 0 And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)) ))
	(assert (<= And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)) 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@cb0aa631)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@cb0aa631)) 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@76fa27e0)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@76fa27e0)) 1 ))
	(assert (<= 0 p924 ))
	(assert (<= p924 1 ))
	(assert (<= 0 p925 ))
	(assert (<= p925 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@dc48de3b))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@c0b83e5b)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@dc48de3b))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@c0b83e5b)) 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@838b40d6))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@7a8dca1e)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@838b40d6))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@7a8dca1e)) 1 ))
	(assert (<= 0 p1186 ))
	(assert (<= p1186 1 ))
	(assert (<= 0 p1187 ))
	(assert (<= p1187 1 ))
	(assert (<= 0 p1188 ))
	(assert (<= p1188 1 ))
	(assert (<= 0 p1189 ))
	(assert (<= p1189 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@e2c435fb))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@569094d8)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@e2c435fb))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@569094d8)) 1 ))
	(assert (<= 0 p1320 ))
	(assert (<= p1320 1 ))
	(assert (<= 0 p1321 ))
	(assert (<= p1321 1 ))
	(assert (<= 0 p1374 ))
	(assert (<= p1374 1 ))
	(assert (<= 0 p1375 ))
	(assert (<= p1375 1 ))
	(assert (<= 0 And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)) ))
	(assert (<= And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)) 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@b30fcc7c)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@b30fcc7c)) 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@24205b46)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@24205b46)) 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@c30420e0))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@c45218fb)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@c30420e0))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@c45218fb)) 1 ))
	(assert (<= 0 p1662 ))
	(assert (<= p1662 1 ))
	(assert (<= 0 p1663 ))
	(assert (<= p1663 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@99cc245d))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@41ea4083)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@99cc245d))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@41ea4083)) 1 ))
	(assert (<= 0 p1794 ))
	(assert (<= p1794 1 ))
	(assert (<= 0 p1795 ))
	(assert (<= p1795 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@da8067e9))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@31167084)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@da8067e9))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@31167084)) 1 ))
	(assert (<= 0 p1978 ))
	(assert (<= p1978 1 ))
	(assert (<= 0 p1979 ))
	(assert (<= p1979 1 ))
	(assert (<= 0 And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)) ))
	(assert (<= And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)) 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@788ca52e)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@788ca52e)) 1 ))
	(assert (<= 0 And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@e7801531)) ))
	(assert (<= And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@e7801531)) 1 ))
	(assert (& (org.abs_models.crowbar.data.True@543c36f4 (<= (/  2 3) (min p710 p711)))))
	(assert (& (org.abs_models.crowbar.data.True@543c36f4 (<= p710 (+ (* (/  1 3) p712) (* (- 1 (/  1 3)) p713))))))
	(assert (& (And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)) (<= p712 (min p766 p767)))))
	(assert (&(And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@cb0aa631)) (= p766 0))))
	(assert (&(And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=org.abs_models.crowbar.data.Predicate@ebfb3f63)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@76fa27e0)) (= p767 0))))
	(assert (& (org.abs_models.crowbar.data.True@543c36f4 (<= p713 (+ (* (/  1 2) p924) (* (- 1 (/  1 2)) p925))))))
	(assert (& (And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@dc48de3b))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@c0b83e5b)) (<= p924 1))))
	(assert (& (And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@838b40d6))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@7a8dca1e)) (<= p925 1))))
	(assert (& (org.abs_models.crowbar.data.True@543c36f4 (<= p711 (min p1186 p1187)))))
	(assert (& (org.abs_models.crowbar.data.True@543c36f4 (<= p1186 (+ (* (/  1 3) p1188) (* (- 1 (/  1 3)) p1189))))))
	(assert (& (And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@e2c435fb))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@569094d8)) (<= p1188 1))))
	(assert (& (org.abs_models.crowbar.data.True@543c36f4 (<= p1189 (+ (* (/  1 2) p1320) (* (- 1 (/  1 2)) p1321))))))
	(assert (& (And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)) (<= p1320 (min p1374 p1375)))))
	(assert (&(And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@b30fcc7c)) (= p1374 0))))
	(assert (&(And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=org.abs_models.crowbar.data.Predicate@8e0f5726)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@24205b46)) (= p1375 0))))
	(assert (& (And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@c30420e0))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@c45218fb)) (<= p1321 1))))
	(assert (& (org.abs_models.crowbar.data.True@543c36f4 (<= p1187 (+ (* (/  1 3) p1662) (* (- 1 (/  1 3)) p1663))))))
	(assert (& (And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@99cc245d))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=0, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@41ea4083)) (<= p1662 1))))
	(assert (& (org.abs_models.crowbar.data.True@543c36f4 (<= p1663 (+ (* (/  1 2) p1794) (* (- 1 (/  1 2)) p1795))))))
	(assert (& (And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), target=Not(left=org.abs_models.crowbar.data.Predicate@da8067e9))), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=-, params=[Function(name=*, params=[Function(name=2, params=[]), prize:ABS.StdLib.Int]), choice:ABS.StdLib.Int]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@31167084)) (<= p1794 1))))
	(assert (& (And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)) (<= p1795 (min p1978 p1979)))))
	(assert (&(And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=1, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@788ca52e)) (= p1978 0))))
	(assert (&(And(left=And(left=org.abs_models.crowbar.data.True@543c36f4, right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), target=org.abs_models.crowbar.data.Predicate@9a033eb4)), right=UpdateOnFormula(update=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=ChainUpdate(left=org.abs_models.crowbar.data.EmptyUpdate@120cbeed, right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=-1, params=[]))), right=ElementaryUpdate(lhs=sw:ABS.StdLib.Int, rhs=Function(name=1, params=[]))), right=ElementaryUpdate(lhs=prize:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=choice:ABS.StdLib.Int, rhs=Function(name=2, params=[]))), right=ElementaryUpdate(lhs=open:ABS.StdLib.Int, rhs=Function(name=%, params=[Function(name=+, params=[prize:ABS.StdLib.Int, Function(name=2, params=[])]), Function(name=3, params=[])]))), target=org.abs_models.crowbar.data.Predicate@e7801531)) (= p1979 0))))
	(check-sat)