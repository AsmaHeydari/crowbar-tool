
    (define-sort ABS.StdLib.Int () Int)
    (define-sort ABS.StdLib.Float () Real)
    (define-sort ABS.StdLib.Bool () Bool)
    (define-sort ABS.StdLib.String () String)
	(define-fun min ((x Real) (y Real)) Real
  (ite (< x y) x y))
(define-fun max ((x Real) (y Real)) Real
  (ite (< x y) y x))
	(declare-fun p0 () Real)
	(declare-fun p1 () Real)
	(declare-fun p54 () Real)
	(declare-fun p55 () Real)
	(declare-fun p160 () Real)
	(declare-fun p161 () Real)
	(assert (<= 0 p0 ))
	(assert (<= p0 1 ))
	(assert (<= 0 p1 ))
	(assert (<= p1 1 ))
	(assert (<= 0 p54 ))
	(assert (<= p54 1 ))
	(assert (<= 0 p55 ))
	(assert (<= p55 1 ))
	(assert (<= 0 p160 ))
	(assert (<= p160 1 ))
	(assert (<= 0 p161 ))
	(assert (<= p161 1 ))
	(assert (<= 0 (+ (* (/  1 4) p0) (* (- 1 (/  1 4)) p1))))(assert true)
	(assert (<= p0 (+ (* (/  1 4) p54) (* (- 1 (/  1 4)) p55))))(assert (and true (not (not (=  0 0)))))
	(assert (<= p54 1))
(assert (and true (not (not (=  0 0)))))
	(assert (<= p55 1))
(assert (and true (not (not (=  0 0)))))
	(assert (<= p1 (+ (* (/  1 4) p160) (* (- 1 (/  1 4)) p161))))(assert (and true (not (=  1 0))))
	(assert (<= p160 1))
(assert (and true (not (=  1 0))))
	(assert (<= p161 1))
(assert (and true (not (=  1 0))))
	(check-sat)