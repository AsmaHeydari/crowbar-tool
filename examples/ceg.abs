module CEG;

// Example code with different specification / implementation issues to showcase counterexample generation

interface Sensor {
  [Spec: Ensures(result >= 0)]
  Int getReading();
}

class Reader {
  Int maxTemp = 0;

  // Issue 1: Sensor s could be null
  [Spec: Ensures(this.maxTemp >= old(this.maxTemp))]
  Unit read(Sensor s) {
    Fut<Int> reading = s!getReading();

    // Issue 2: this.maxTemp could be overwritten while suspended
    await reading?;
    Int temp = reading.get;
    if(temp > this.maxTemp) {
      this.maxTemp = temp;
    }
  }

  [Spec: Requires(s != null)]
  [Spec: Ensures(this.maxTemp == old(this.maxTemp))]
  Int readAvg(Sensor s, Int sample) {
    Int i = 0;
    Int sum = 0;

    // Issue 3: this.maxTemp could be overwritten in loop
    [Spec: WhileInv(s != null)]
    while(i < sample) {
      i = i + 1;
      Fut<Int> reading = s!getReading();
      await reading?;
      Int value = reading.get;
      sum = sum + value;
    }

    // Issue 4: sample could be zero
    Int avg = this.div(sum, sample);
    return avg;
  }

  [Spec: Requires(b > 0 && a >= 0)]
  [Spec: Ensures(this.maxTemp == old(this.maxTemp))]
  Int div(Int a, Int b) {
    return 0; // Not relevant for this example
  }
}

{}