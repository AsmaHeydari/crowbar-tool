module Test;

data Spec = ObjInv(Bool) | Ensures(Bool) | WhileInv(Bool);

[Spec : ObjInv(this.f >= 0)]
class C(Fut<Int> sth) {

	Int f = 0;
	Int f2 = 0;

    [Spec : Ensures(result >= 0)]
	Int m(Int v){  	
	    	
		await this.f >= 10;
		
    	Int w = v;
	    	
		if(w >= 0) this.f = (this.f-10)+w;
		else          this.f = -w;
		return v*w;
	}
	
    [Spec : Ensures(result == 0)]
	Int m2(Int v){
	    this.f2 = 0;
	        	
    	[Spec: WhileInv(this.f >= 0 && this.f2 == 0)]
    	while(this.f < 10){
	    	this.f = this.f+1;
	    	await this.f2 == 0;
	    }
	    	
		return this.f2;
	}


    [Spec : Ensures(result >= 0 && this.sth == fut)]
	Int m3(Fut<Int> fut){
    	Int s = fut.get;
    	
    	Int w = s;
	    	
		if(w >= 0) this.f =  w;
		else          this.f = -w;
		this.sth = fut;
		return s*w;
	}

}

{

}