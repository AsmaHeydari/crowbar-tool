module Last;

data Spec = ObjInv(Bool) | Ensures(Bool) | Requires(Bool) | WhileInv(Bool);

interface LastI{
    Int incr();
}

class LastC(Int i) implements LastI{

    [Ensures (last(this.i) != this.i)]
    Unit noLastFail(){
        this.i = 0;
    }

    [Ensures (last(this.i) != this.i)]
    Unit simpleSuccess(){
        this.i = 0;
        await this.i!=0;
        this.i=0;
    }

    [Ensures (last(this.i) != old(this.i))]
    Unit oldSuccess(){
      if(this.i == 0){
        await this.i!=0;
      }else{
        await this.i==0;
      }
    }

    Int incr(){
        return  1;
    }

    [Ensures(this.i == last(this.i) + 1)]
    Unit oldWithUpdateSuccess(){
        this.i = 3;
        Fut<Int> fut = this!incr();
        await fut?;
        this.i = this.i + 1;
    }
}

{}