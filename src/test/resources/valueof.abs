module Values;

data Spec = ObjInv(Bool) | Ensures(Bool) | Requires(Bool) | WhileInv(Bool);

interface I1 {
	[Spec : Ensures(result == 1)]
	Int success();
	[Spec : Ensures(result == 1)]
	Int fail();
	
	[Spec : Requires(valueOf(ff) == 1)]
	[Spec : Ensures(result == 1)]
	Int internal(Fut<Int> ff);
}

interface I2 {
	[Spec : Ensures(result == 1)]
	Int g();
	[Spec : Ensures(result == 2)]
	Int h();
}

[Spec : Requires(o != null)]
[Spec : ObjInv(o != null && s >= 0)]
class C(I2 o) implements I1 {
    Int s = 0;
    Unit readToField(){
		Fut<Int> fi = o!g();
		this!internal(fi);
		s = fi.get;
    }
	Int success() {
		Fut<Int> fi = o!g();
		Fut<Int> fint = this!internal(fi);
		Int i = fint.get;
		return i;
	}
	Int fail() {
		Fut<Int> fi = o!h();
		Fut<Int> fint = this!internal(fi);
		Int i = fint.get;
		return i;
	}
	
	Int internal(Fut<Int> ff){
		Int i = ff.get;
		return i;
	}

	[Spec : Requires(valueOf(fut) == True)]
    [Spec : Ensures(result == True)]
    Bool valueOfBoolFutSuccess(Fut<Bool> fut) {
        await fut?;
        return fut.get;
    }
}

{}
