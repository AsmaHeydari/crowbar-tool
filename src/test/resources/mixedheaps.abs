module MHeaps;

data Spec = ObjInv(Bool) | Ensures(Bool) | Requires(Bool) | WhileInv(Bool);

data ComplexType = ComplexA | ComplexB;
data DataType = Default | DataA | DataB | DataC;

[Spec : Requires( i  >= 0 )]
[Spec : ObjInv( i >= 0 && res != DataC )]
class C(Int i){
    DataType res = Default;
    
    DataType simpleSuccess(ComplexType p){
        case (p){
            ComplexA => { i = 1; res = DataA; }
            ComplexB => { i = 2; res = DataB; }
            _        => skip;
        }
        return res;
    }
}

{}
